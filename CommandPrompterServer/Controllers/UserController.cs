using CommandPrompterServer.Models.Dao;
using CommandPrompterServer.Models.Dto;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;

namespace CommandPrompterServer.Controllers
{
    
    public class UserController : BaseController
    {
        /// <summary>
        /// The id of user is autogenerated, id in user is not used.
        /// </summary>
        /// <param name="user"></param>
        /// <returns></returns>
        [HttpPut]
        [Route("AddUser")]
        [AllowAnonymous]
        public UserResponseDto AddUser([FromBody] UserRequestDto user)
        {

            var ret = _userService.AddNewEntity(_mapper.Map<User>(user));
            
            return _mapper.Map<UserResponseDto>(ret);
        }

        [HttpPut]
        [Route("ValidateUserInfo")]
        [Authorize]
        public UserResponseDto ValidateUser([FromBody] UserRequestDto user)
        {
            var ret = _userService.ValidateUser(user.Username, user.Password);
            return _mapper.Map<UserResponseDto>(ret);
        }

        [HttpGet]
        [Route("ActivateUser/{id}")]
        [Authorize]
        public void ActivateUser([FromQuery] string id)
        {
            _userService.ActivateUser(id);
        }

        [HttpGet]
        [Route("DeactivateUser/{id}")]
        [Authorize]
        public void DeactivateUser([FromQuery] string id)
        {
            _userService.DeactivateUser(id);
        }

        [HttpPost]
        [Route("UpdateUser")]
        [Authorize]
        public UserResponseDto UpdateUser([FromBody] UserUpdateRequestDto request)
        {
            var user = _userService.ValidateUser(request.Username, request.OldPassword);
            if (user != null)
            {
                user.Password = request.NewPassword;
                user.Email = request.Email;
                var temp = _userService.UpdateEntity(user);
            }
            return _mapper.Map<UserResponseDto>(user);
        }

        /// <summary>
        /// Test function
        /// </summary>
        /// <returns></returns>
        [HttpGet]
        [Route("GetAllUsers")]
        [Authorize]
        public List<User> GetAllUsers()
        {
            return _userService.GetAllEntities();
        }
    }
}
